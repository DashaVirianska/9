
#include <stdio.h>
#include <stdlib.h>

// Функція для обчислення мінімальної кількості кроків
int minSteps(int x, int y) {
    // Використовуємо динамічне програмування для знаходження мінімальної кількості кроків

    // Створюємо масив dp для зберігання мінімальних кількостей кроків
    int *dp = (int *)malloc((y + 1) * sizeof(int));

    // Ініціалізуємо dp[0] та dp[1] згідно умови задачі
    dp[0] = 0;
    dp[1] = 1;

    // Обчислюємо мінімальну кількість кроків для кожної точки від x до y
    for (int i = 2; i <= y; i++) {
        if (i % 2 == 0) {
            // Якщо точка парна, беремо мінімум з dp[i/2] та dp[i-1] + 1
            dp[i] = dp[i / 2] < dp[i - 1] + 1 ? dp[i / 2] : dp[i - 1] + 1;
        } else {
            // Якщо точка непарна, беремо dp[i-1] + 1
            dp[i] = dp[i - 1] + 1;
        }
    }

    int minSteps = 0;

    // Обчислюємо мінімальну кількість кроків для інтервалу [x, y]
    for (int i = x; i <= y; i++) {
        minSteps += dp[i];
    }

    free(dp);

    return minSteps;
}

int main() {
    int x, y;
    printf("Введіть значення x та y: ");
    scanf("%d %d", &x, &y);

    int result = minSteps(x, y);

    printf("Мінімальна кількість кроків: %d\n", result);

    return 0;
}
